//другие упр закомментированы в целях предотвращения некорретной работы
//на номера страниц можно не обращать внимание


$(':header').addClass('headline'); //выбираются все заголовки h1-h6
                                   //а к их атрибутам class добавляется значение headline
$('li:lt(3)').hide().fadeIn(1000); //первые три эл-та списка скрываются, а затем появляются вновь
$('li').on('click', function() {   //на каждый эл-т списка вешается обработчик событий. При клике по нему анонимная ф-ция удаляет этот эл-т
$(this).remove();
});



//УПР. сцепление эл-ов (все работает)
// $('li[id!="one"]').hide().delay(500).fadeIn(1400); //применяем сцепку из трех методов ко всем эл-ам кроме первого



//УПР. получение контента (все работает)
// var $listHTML = $('ul').html();
// $('ul').append($listHTML);

// var $listText = $('ul').text();
// $('ul').append($listText);

// var $listHTML = $('li').html();
// $('li').append($listHTML);

// var $listText = $('li').text();
// $('li').append($listText);



//УПР. изменение контента (все работает)
// $(function() {
//     //выбираем все эл-ты списка которые содержат слово "кедровые"
//     $('li:contains("кедровые")').text('миндаль');
//     //выбираем все эл-ты с классом hot, получаем их текстовое значение и делаем курсивное начертание
//     $('li.hot').html(function() {
//         return '<em>' + $(this).text() + '</em>';
//     });
//     //первый эл-т списка просто удаляем, находим его по id
//     $('li#one').remove();
// });



// //УПР. добавление нового контента (все работает)
// $(function() {
//     //вставляем абзац над списком
//     $('ul').before('<p class="notice">Список обновлен!</p>');
//     //отбираем три эл-та с классом hot и добавляем плюс с пробелом перед каждым из них
//     $('li.hot').prepend('+ ');
//     //сохраняем в переменной newListItem новый эл-т списка
//     var $newListItem = $('<li><em>кукуруза </em>без ГМО</li>');
//     //с помощью :last ищем последний эл-т текущего списка и вставляем ниже новый эл-т
//     $('li:last').after($newListItem);
// });



//УПР. работа с атрибутами (все работает)
// $(function() {
//     $('li#three').removeClass('hot');
//     $('li.hot').addClass('favorite');
//     $('ul').attr('id', 'group');
// });



//УПР. изменение правил css (все работает)
// $(function() {
//     var backgroundColor = $('li').css('background-color');
//     $('ul').append('<p>Предыдущий цвет:'+backgroundColor+'</p>');
//     $('li').css({
//         'background-color': '#c5a996',
//         'border': '1px solid #fff',
//         'color': '#000',
//         'font-family': 'Georgia',
//         'padding-left': '+=75'
//     });
// });



//УПР. использование метода .EACH() (все работает)
// $(function() {
//     $('li').each(function() {
//         var ids = this.id;
//         $(this).append('<span class="order">'+' '+ids+'</span>');
//     })
// });



//УПР. события браузера (все работает)
// $(function() {
//     //создаем две переменные, одна обычная, а другая хранит в себе все эл-ты списка
//     var ids = '';
//     var $listItems = $('li');

//     //вешаем обработчик события, который реагирует на два события: наведение курсора мыши на эл-т и отведение в сторону
//     $listItems.on('mouseover', function() {
//         ids = this.id;
//         $listItems.children('span').remove();
//         $(this).append('<span class="priority">'+ids+'</span>');
//     });
//     $listItems.on('mouseout', function() {
//         $(this).children('span').remove();
//     });
// });



//УПР. использование объекта event (все работает)
// $(function() {
//     //объект в качестве параметра передаем в ф-цию
//     $('li').on('click', function(e) {
//         //удаляем любые теги span в эл-х списка
//         $('li span').remove();
//         //создается объект Date
//         var date = new Date;
//         //преобразуем текущее время в более удобную форму
//         var clicked = date.toDateString();
//         //рядом с эл-ом показываем время клика по нему и тип события
//         $(this).append('<span class="date">'+' '+clicked+' '+e.type+'</span>');
//     });
// });



//УПР. простые эффекты. стр. 339 (все работает)
// $(function() {
//     //скрываем заголовок и потом показываем с помощью метода slideDown
//     $('h2').hide().slideDown();
//     var $li = $('li');
//     //скрываем эл-ты списка и потом перебираем каждых с помощью метода each
//     //параметр index является индексом конкретного эл-та списка
//     //они также скрываются и потом показываются с помощью метода fadeIn
//     $li.hide().each(function(index) {
//         $(this).delay(700*index).fadeIn(700);
//     });
//     //обработчик событий, который при клике по эл-ту списка скрывает его - метод fadeOut
//     $li.on('click', function() {
//         $(this).fadeOut(700);
//     });
// });



//УПР. использование метода animate(). стр. 341 (все работает)
// $(function() {
//     //на эл-ты списка навешиваем обработчик событий .on()
//     $('li').on('click', function() {
//         //получаем эл-т по которому кликнули и применяем к нему метод animate()
//         $(this).animate({
//             //меняем css св-ва opacity и paddingLeft
//             opacity: 0.0,
//             paddingLeft: '+=80'
//             //задаем скорость с которой будет происходить анимация и вызываем ф-цию для удаления нажатого эл-та
//             //по сути тут одна анонимная ф-ция внутри другой 
//         }, 500, function() {
//             $(this).remove();
//         });
//     });
// });



//УПР. обход дерева dom. стр. 343 (все работает)
// $(function() {
//     var $h2 = $('h2');
//     //скрываем список с помощью hide()
//     $('ul').hide();
//     //вставляем ссылку перед закрывающим тегом h2
//     $h2.append('<a href="#">Показать</a>');
//     //вешаем обработчик события на заголовок
//     $h2.on('click', function() {
//         $h2.next()
//         .fadeIn(500)
//         .children('hot')
//         .addClass('complate');
//         $h2.find('a').fadeOut();
//     })
// });



//УПР. применение фильтров. стр. 345 (все работает)
//делаем выборку по эл-там списка
// var $listItems = $('li');
// //ищем последний эл-т списка со значением hot и удаляем это значение
// $listItems.filter('.hot:last').removeClass('hot');
// //ко всем эл-там без значения hot добавляем класс со значением cool
// $('li:not(.hot)').addClass('cool');
// //ищем эл-т li в котором присутствует эл-т с тегом em и добавляем к нему класс complate
// $listItems.has('em').addClass('complete');
// //использует цикл each для перебора всех эл-ов списка и добавления к тем где есть hot слова Акция!
// $listItems.each(function() {
//     var $this = $(this);
//     if ($this.is('.hot')) {
//         $this.prepend('Акция! ');
//     }
// });
// //проверяем в каком эл-те списка есть слово мед и добавляем к нему слово домашний
// $('li:contains("мед")').append(' (домашний)');



//УПР. использование порядковых номеров. стр. 347 (все работает)
// $(function() {
//     //метод lt проверяем первые n - эл-ов списка
//     $('li:lt(2)').removeClass('hot');
//     //метод eq проверяет первый эл-т списка
//     $('li').eq(0).addClass('complate');
//     //метод gt проверяет последующие n - эл-ов списка
//     $('li:gt(2)').addClass('cool');
// });



// УПР. изменение размеров. стр. 355 (все работает)
// $(function() {
//     var listHeight = Math.round($('#page').height());
//     $('ul').append('<p>Высота: '+listHeight+'px</p>');
//     $('li').width('60%');
//     $('li#one').width(200);
//     $('li#two').width('75%');
// });